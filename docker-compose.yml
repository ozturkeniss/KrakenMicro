version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gomicro
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: .
      dockerfile: deployments/docker/user-service.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=gomicro
    depends_on:
      - postgres

  product-service:
    build:
      context: .
      dockerfile: deployments/docker/product-service.Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=gomicro
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - postgres
      - rabbitmq

  basket-service:
    build:
      context: .
      dockerfile: deployments/docker/basket-service.Dockerfile
    ports:
      - "8082:8082"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PRODUCT_SERVICE_URL=http://product-service:8081
    depends_on:
      - redis
      - product-service

  payment-service:
    build:
      context: .
      dockerfile: deployments/docker/payment-service.Dockerfile
    ports:
      - "8083:8083"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=gomicro
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - postgres
      - rabbitmq

  krakend:
    image: devopsfaith/krakend:latest
    ports:
      - "8085:8080"
    volumes:
      - ./cmd/api-gateway/krakend.json:/etc/krakend/krakend.json
    depends_on:
      - user-service
      - product-service
      - basket-service
      - payment-service

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data: 